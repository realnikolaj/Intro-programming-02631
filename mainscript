#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Dec  5 21:28:42 2018

@author: nik
"""

import numpy as np
from turtlegraph import turtleGraph
from turtleplot import turtlePlot, saveFig
from linditer import LindIter
from displayMenu import displayMenu
import os

# Define menu options
# for main and sub Systems menu
mainItems = np.array(["System menu", "Generate Plot", 'Save plot', "Quit"])
systemItems = np.array(["Korch", "Sierpinski", "Generate plot", "Set or change number of iteration",  "Return"])

# Setting empty variable for asserting if static print statements needs displayed
System = ''
N = 0

# Define welcome statement
# Define set of print statements for if user tries to plot without any system or incorrect iterations entered
# Define prt statements for active filters
prt_stat = 'Please choose a system and enter number of iteration'
prt_stat2 = 'Please enter number of iteration'
prt_stat3 = 'Please choose a system'
prt_nosys2 = 'Error: No system selected, please go to systems menu to select one'
prt_neg_n = 'Not possible to display negative order'
prt_asys = '{} system is selected'
prt_an = '{} iterations applied'

# Display main menu
while True:
    
    # Display current system selections
    if System == '' and N == 0:
        print(prt_stat)
    elif len(System) > 0 and N == 0: 
        print(prt_asys.format(System))
        print(prt_an.format(N))
        print(prt_stat2)
    elif len(System) > 0 and N > 0:
        print(prt_asys.format(System))
        print(prt_an.format(N))
    elif len(System) == 0 and N > 0:
        print(prt_an.format(N))
        print(prt_stat3)
    elif N != 0:
        print(prt_an.format(N))
    
    # Display and show title of the main menu
    print("Main menu")
    mainChoice = displayMenu(mainItems)

    # 1. Selects system sub menu
    if mainChoice == 1:
        
        while True:
            
            # Display current system selections
            if System == '' and N == 0:
                print(prt_stat)
            elif len(System) > 0 and N == 0: 
                print(prt_asys.format(System))
                print(prt_an.format(N))
                print(prt_stat2)
            elif len(System) > 0 and N > 0:
                print(prt_asys.format(System))
                print(prt_an.format(N))
            elif len(System) == 0 and N > 0:
                print(prt_an.format(N))
                print(prt_stat3)
            elif N != 0:
                print(prt_an.format(N))
                
            # Display and show title of the sub menu
            print('System menu')
            systemChoice = displayMenu(systemItems)

            # 1.1 Selects the Korch system
            if systemChoice == 1:
                System = systemItems[0]
                    
            # 1.2 Selects the Sierpinski system
            elif systemChoice == 2:             
                System = systemItems[1]
                 
            # 1.3 Generate plot
            elif systemChoice == 3:
                
                # Displays error messages if no system or
                # incorrect number of iterations entered.
                # If no issue found then generate and display plot
                if System == "" and N < 0:
                    print(prt_nosys2)
                    print(prt_neg_n)
                elif System == "":
                    print(prt_nosys2)
                elif N < 0:
                    print(prt_neg_n)
                else:
                    turtlePlot(turtleGraph(LindIter(System, N), N), System, N)
            
            # 1.4 Prombt user for number of iterations
            elif systemChoice == 4:
                N = int(input("Enter number of iterations: "))
                
            # 1.4 Quit the submenu
            elif systemChoice == 5:
                break
            

    # 2. Generate plots
    elif mainChoice == 2:
        
        # Displays error messages if no system or
        # incorrect number of iterations entered.
        # If no issue found generate and display plot
        if System == "" and N < 0:
            print(prt_nosys2)
            print(prt_neg_n)
        elif System == "":
            print(prt_nosys2)
        elif N < 0:
            print(prt_neg_n)
        else:
            turtlePlot(turtleGraph(LindIter(System, N), N), System, N)
            
    # 3. Export as filetype
    elif mainChoice == 3:
        fileName = ''
        # Displays error messages if no system or
        # incorrect number of iterations entered.
        # If no issue found generate and display plot
        if System == "" and N < 0:
            print(prt_nosys2)
            print(prt_neg_n)
        elif System == "":
            print(prt_nosys2)
        elif N < 0:
            print(prt_neg_n)
        else:
            print('Filetypes supported: PNG, PDF, SVG or PS')
            fileName = input('Enter filename and filetype in like "name.filetype": ') 
            saveFig(turtlePlot(turtleGraph(LindIter(System, N), N), System, N), System, N, fileName)
            print('File {} saved to{}'.format(fileName, os.getcwd()))


    # 4. Quit
    elif mainChoice == 4:
        break
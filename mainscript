#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Dec  5 21:28:42 2018

@author: nik
"""

import numpy as np
from turtlegraph import turtleGraph
from turtleplot import turtlePlot
from linditer import LindIter
from displayMenu import displayMenu




# Define main menu options
mainItems = np.array(["System menu", "Generate Plot", "Quit"])

# Define sub menu "systems"
systemItems = np.array(["Korch", "Sierpinski", "Generate plot", "Set or change number of iteration",  "Return"])

# Setting empty variable for print statements
System = ''
N = 0

# Define prt statements for empty filters
prt_nosys = 'Currently no system entered'
prt_no_n = 'Currently no iterations entered'
prt_stat = 'Please choose a system name and enter number of iteration'

# Define prt statements for active filters
prt_asys = '{} system is selected'
prt_an = '{} iterations applied'




# Display main menu
while True:
    
    # Display current selections
    if System == '' and N == 0:
        print(prt_stat)
    elif len(System) > 0 and N != 0: 
        print(prt_asys.format(System))
        print(prt_an.format(N))
    elif len(System) > 0:
        print(prt_asys.format(System))
    elif N != 0:
        print(prt_an.format(N))
    
    # Display the title of the current menu
    print("Main menu")
    
        
    # Display menu options and ask user to choose a menu item
    mainChoice = displayMenu(mainItems)
    # Menu item chosen

    # 1. Choose system and iterations
    if mainChoice == 1:
        
        
        while True:
            
            # Display current selections
            if System == '' and N == 0:
                print(prt_stat)
            elif len(System) > 0 and N != 0: 
                print(prt_asys.format(System))
                print(prt_an.format(N))
            elif len(System) > 0:
                print(prt_asys.format(System))
            elif N != 0:
                print(prt_an.format(N))
                
            # Display the title of the current menu
            print('Systems menu')
                
            # Display submenu "systems"
            systemChoice = displayMenu(systemItems)
            

            # 1.1 Korch selection
            if systemChoice == 1:
                System = systemItems[0]
                
                while True:
                    
                    # Prombt user for number of iterations
                    N = int(input("Enter number of iterations: "))
                    break
                    
            # 1.2 Sierpinski selection
            elif systemChoice == 2:             
                System = systemItems[1]
                
                # Prombt user for number of iterations
                while True:
                     N = int(input("Enter number of iterations: "))
                     break
                 
            # 1.3 Generate plot
            elif systemChoice == 3:
                
                # Display error message if no system entered
                if System == "":
                    
                    print("Error: No system selected")
                    
                # Display error message if user entered zero
                elif N < 0:
                    
                    
                    print('Not possible to display negative order')
                else:
                    
                    # Display plot
                    turtlePlot(turtleGraph(LindIter(System, N), N), System, N)
                    break
            
            # 1.4 Prombt user for number of iterations
            elif systemChoice == 4:
                N = int(input("Enter number of iterations "))
                
            # 1.4 Quit the submenu
            elif systemChoice == 5:
                break
            

    # 2. Generate plots
    elif mainChoice == 2:
        
        # Is name empty?
        if System == "":
            # Display error message
            print("Error: No system selected")
        elif N < 0:
            # Display error message
            print('Not possible to display negative order')
        else:
            # Display plot
            turtlePlot(turtleGraph(LindIter(System, N), N), System, N)
            
#    # 3. Export as filetype
#    elif mainChoice == 3:
#        user = input('Hi')

    # 4. Quit
    elif mainChoice == 4:
        break